---
- name: Provision EC2 Instance
  hosts: localhost
  gather_facts: true
  vars:
    aws_region: "us-east-2"
    vpc_cidr_block: "10.0.0.0/16"
    subnet_cidr_block: "10.0.1.0/24"
    security_group_name: "wireguard-vpn"
    ec2_instance_name: "wireguard-vpn"
    ec2_instance_type: "t2.micro"
    ec2_ssh_key: "{{ ec2_ssh_key }}"
    ec2_ami_id: "ami-024e6efaf93d85776"
    ec2_name: "wireguard-vpn"

  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: "{{ ec2_name }}"
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ aws_region }}"
        state: present
        tags:
          Name: "{{ ec2_name }}"
      register: vpc

    - name: Create Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr_block }}"
        az: "{{ aws_region }}a"
        region: "{{ aws_region }}"
        state: present
        tags:
          Name: "{{ ec2_name }}"
      register: subnet

    - name: Create Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        tags:
          Name: "{{ ec2_name }}"
      register: igw

    - name: Attach Internet Gateway
      ec2_vpc_igw_info:
        internet_gateway_ids: "{{ igw.gateway_id}}"
        region: "{{ aws_region }}"
      register: igw_info

    - name: Create Route Table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
          - dest: ::/0
            gateway_id: "{{ igw.gateway_id }}"
        tags:
          Name: "{{ ec2_name }}"
      register: route_table

    - name: Associate Route Table with Subnet
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"

        route_table_id: "{{ route_table.route_table.id }}"
        state: present

    - name: Create Security Group
      ec2_group:
        name: "{{ security_group_name }}"
        description: "{{ security_group_name }}"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: udp
            from_port: 51820
            to_port: 51820
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 51821
            to_port: 51821
            cidr_ip: 0.0.0.0/0
        tags:
          Name: "{{ ec2_name }}"
      register: security_group

    - name: Provision EC2 Instance
      amazon.aws.ec2_instance:
        key_name: "{{ ec2_ssh_key }}"
        instance_type: "{{ ec2_instance_type }}"
        image_id: "{{ ec2_ami_id }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        network:
          assign_public_ip: true
          source_dest_check: false
        security_group: "{{ ec2_name }}"
        
        region: "{{ aws_region }}"
        count: 1
        tags:
          Name: "{{ ec2_name }}"
        wait: true
      register: ec2_instance

    - name: Pause for 5 minutes to get IP and ssh ready
      ansible.builtin.pause:
        minutes: 5

    - name: Output instance and security group information
      debug:
        var: ec2_instance.instances[0].network_interfaces[0].association.public_ip

    - name: Create dynamic host
      add_host:
        name: "{{ ec2_instance.instances[0].network_interfaces[0].association.public_ip }}"
        groups: dynamic_hosts

- name: Setup the wireguardVPN
  hosts: dynamic_hosts
  gather_facts: true
  become: true
  remote_user: ubuntu
  tasks:
    - name: Get IP adress
      shell: echo "$(curl ifconfig.io)"
      register: ip
    - name: Perform essential tasks
      ansible.builtin.import_tasks: tasks/essential.yml
    - name: Install docker
      ansible.builtin.import_tasks: tasks/docker.yml
    - name: Install nginx
      ansible.builtin.import_tasks: tasks/nginx.yml
    - name: Install wireguard
      ansible.builtin.import_tasks: tasks/wg.yml
